version: '3.4'

networks:
  net_web:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  db_data: {}
  db_data_slave: {}

services:
  reverse-proxy:
    image: nginx:latest
    container_name: reverse_proxy
    restart: on-failure
    depends_on:
      - web-app
      - doom
    ports:
      - '4444:4444'
    volumes:
      - ./proxy-conf/:/etc/nginx/conf.d/
    networks:
      - net_web

  db_server:
    image: mysql:latest
    container_name: mysql_server
    volumes:
      - db_data:/var/lib/mysql
      - ./master/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
    env_file:
      - database.env
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - 3306:3306
    networks:
      - net_web

  db_slave:
    image: mysql:latest
    container_name: mysql_slave
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=slave_db
      - MYSQL_USER=slave
      - MYSQL_PASSWORD=root
    volumes:
      - db_data_slave:/var/lib/mysql
      - ./slave/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
    depends_on:
      - db_server
    networks:
      - net_web
  
  setup-slave:
    image: mysql:latest
    container_name: setup-slave
    command: ["sh", "/scripts/init-slave.sh"]
    volumes:
      - ./init-slave.sh:/scripts/init-slave.sh
    environment:
      - MASTER_HOST=mysql_server
      - SLAVE_HOST=mysql_slave
    depends_on:
      - db_server
      - db_slave
    networks:
      - net_web
  
  web-app:
    build: ./groupie-app/
    container_name: web_app
    depends_on:
      - db_server
      - db_slave
      - setup-slave
    ports:
      - '8080:8080'
    env_file:
      - database.env
    environment:
      - MYSQL_SERVER_IP=mysql_server
      - MYSQL_SERVER_PORT=3306
    networks:
      - net_web
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - net_web

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - net_web

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - "./monitoring/loki-config.yaml:/etc/loki/loki-config.yaml"
    ports:
      - "3100:3100"
    command: "-config.file=/etc/loki/loki-config.yaml"
    networks:
      - net_web

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - net_web

  promtail:
     image: grafana/promtail:latest
     container_name: promtail
     volumes:
       - "./monitoring/promtail-config.yaml:/etc/promtail/promtail-config.yaml"
       - "/var/log:/var/log"
     command: "-config.file=/etc/promtail/promtail-config.yaml"
     networks:
       - net_web

  doom:
    build: game/game_build_files/doom/.
    container_name: game_doom
    networks:
      - net_web
    ports:
      - "81:8000"

  dind:
    image: docker:dind
    container_name: dind
    restart: always
    privileged: true
    dns:
      - 8.8.8.8
    volumes:
      - "/var/lib/docker/plugins/:/var/lib/docker/plugins/"
      - "/run/docker/plugins:/run/docker/plugins"
      - "./monitoring/daemon.json:/etc/docker/daemon.json"
      - "/var/lib/docker/containers/:/var/lib/docker/containers"
    command: "dockerd"
    networks:
      - net_web

  wordpress:
    depends_on:
      - db_server
    image: wordpress:latest
    ports:
      - "8000:80"
    volumes:
      - ./wordpress/wp-content:/var/www/html/wp-content
      - ./wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    restart: always
    environment:
      WORDPRESS_DB_HOST: db_server:3306
      WORDPRESS_DB_NAME: groupie_DB
      WORDPRESS_DB_USER: groupie
      WORDPRESS_DB_PASSWORD: root
    networks:
      - net_web
